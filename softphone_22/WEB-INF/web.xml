<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee  http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">
  <display-name>ucpmvn</display-name>

  <!-- 1.1 Spring ApplicationContext配置文件的路径,可使用通配符，用于后面的Spring Context Loader -->
  <!--<context-param>-->
    <!--<param-name>contextConfigLocation</param-name>-->
    <!--<param-value>-->
      <!--classpath*:/spring/application.xml-->
    <!--</param-value>-->
  <!--</context-param>-->

  <!--&lt;!&ndash; 1.2 设定Spring Context的默认Profile &ndash;&gt;-->
  <!--<context-param>-->
    <!--<param-name>spring.profiles.default</param-name>-->
    <!--<param-value>production</param-value>-->
  <!--</context-param>-->

  <!--&lt;!&ndash; 2.1. Spring context  &ndash;&gt;-->
  <!--<listener>-->
    <!--<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>-->
  <!--</listener>-->
  <!--&lt;!&ndash; 2.2 Spring刷新Interceptor防止内存泄漏 &ndash;&gt;-->
  <!--<listener>-->
    <!--<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>-->
  <!--</listener>-->

  <!--<listener>-->
    <!--<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>-->
  <!--</listener>-->


  <!-- 3.1 编码 -->
  <!--<filter>-->
    <!--<filter-name>encodingFilter</filter-name>-->
    <!--<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>-->
    <!--<init-param>-->
      <!--<param-name>encoding</param-name>-->
      <!--<param-value>UTF-8</param-value>-->
    <!--</init-param>-->
    <!--<init-param>-->
      <!--<param-name>forceEncoding</param-name>-->
      <!--<param-value>true</param-value>-->
    <!--</init-param>-->
  <!--</filter>-->
  <!--<filter-mapping>-->
    <!--<filter-name>encodingFilter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
  <!--</filter-mapping>-->

   <!--3.2 Header Filter-->
  <!--<filter>-->
    <!--<filter-name>httpHeaderFilter</filter-name>-->
    <!--<filter-class>com.ucpmvn.filter.HttpHeaderFilter</filter-class>-->
  <!--</filter>-->
  <!--<filter-mapping>-->
    <!--<filter-name>httpHeaderFilter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
  <!--</filter-mapping>-->

  <!--这里需要配置security过滤器-->
  <!--<filter>-->
    <!--<filter-name>httpMethodFilter</filter-name>-->
    <!--<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>-->
  <!--</filter>-->
  <!--<filter>-->
    <!--<filter-name>springSecurityFilterChain</filter-name>-->
    <!--<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>-->
  <!--</filter>-->

  <!--<filter-mapping>-->
    <!--<filter-name>httpMethodFilter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
  <!--</filter-mapping>-->

  <!--<filter-mapping>-->
    <!--<filter-name>springSecurityFilterChain</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
  <!--</filter-mapping>-->


  <!-- 4.1 Spring MVC Servlet -->
  <!--<servlet>-->
    <!--<servlet-name>springServlet</servlet-name>-->
    <!--<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>-->
    <!--<init-param>-->
      <!--<param-name>contextConfigLocation</param-name>-->
      <!--<param-value>classpath*:spring/spring-mvc.xml</param-value>-->
    <!--</init-param>-->
    <!--<load-on-startup>1</load-on-startup>-->
  <!--</servlet>-->
  <!--<servlet-mapping>-->
    <!--<servlet-name>springServlet</servlet-name>-->
    <!--<url-pattern>/</url-pattern>-->
  <!--</servlet-mapping>-->

  <!-- 跨域代理，用于解决客户端的跨域问题 -->
  <servlet>
    <servlet-name>AjaxProxy</servlet-name>
    <servlet-class>com.huawei.proxy.ProxyServlet</servlet-class>
    <init-param>
      <param-name>isMultiRemoteServer</param-name>
      <param-value>false</param-value>
    </init-param>
    <init-param>
      <param-name>remoteServer</param-name>
      <param-value>103.28.214.86</param-value>
    </init-param>
    <init-param>
      <param-name>remotePort</param-name>
      <param-value>8000</param-value>
    </init-param>
    <init-param>
      <param-name>remotePath</param-name>
      <param-value>/agentgateway</param-value>
    </init-param>
    <load-on-startup>2</load-on-startup>
  </servlet>

  <servlet-mapping>
    <servlet-name>AjaxProxy</servlet-name>
    <url-pattern>/proxy/*</url-pattern>
  </servlet-mapping>



</web-app>